import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/lib/auth";
import { headers } from 'next/headers'; // Import headers
import { SidebarProvider } from "@/components/ui/sidebar"; // Import SidebarProvider

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Helper function to determine initial open sections based on pathname
function getInitialOpenSections(pathname: string): string[] {
  // Implement logic here to determine which sections should be open by default
  // based on the current pathname. For example:
  if (pathname.startsWith('/dashboard/crm')) {
    return ['CRM & Sales']; // Assuming 'CRM & Sales' is the title of the collapsible section
  }
  if (pathname.startsWith('/dashboard/billing')) {
    return ['Billing & Finance'];
  }
  if (pathname.startsWith('/dashboard/operations')) {
    return ['Operations & NOC'];
  }
  if (pathname.startsWith('/dashboard/support')) {
    return ['Support & Comms'];
  }
  if (pathname.startsWith('/dashboard/system')) {
    return ['System'];
  }
  // Add more conditions for other sections
  return []; // Default to no sections open
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers();
  const pathname = headersList.get('x-pathname') || ''; // Get pathname from headers
  const initialOpenSections = getInitialOpenSections(pathname);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider>
          <SidebarProvider initialOpenSections={initialOpenSections}>
            {children}
          </SidebarProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
